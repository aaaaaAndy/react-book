"use strict";(self.webpackChunkreact_book=self.webpackChunkreact_book||[]).push([[7617],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(t),u=a,m=d["".concat(c,".").concat(u)]||d[u]||h[u]||l;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=u;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4374:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const l={sidebar_position:2,tags:["Children","map","forEach","count","toArray","only"]},i=void 0,o={unversionedId:"v16/react/React.Children",id:"v16/react/React.Children",title:"React.Children",description:"React.Children\u8fd9\u4e2aAPI\u5e76\u4e0d\u5e38\u7528\uff0c\u4f46\u662f\u5982\u679c\u77e5\u9053\u5e76\u4f1a\u7528\u8fd9\u4e2aAPI\u7684\u8bdd\uff0c\u8fd8\u662f\u80fd\u63d0\u9ad8\u5f88\u5927\u6548\u7387\u7684\u3002\u4e14\u4e0d\u8bf4\u6548\u7387\u7684\u4e8b\u60c5\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u5f88\u6709\u8da3\uff0c\u503c\u5f97\u4e00\u63a2\u3002",source:"@site/docs/v16/react/React.Children.md",sourceDirName:"v16/react",slug:"/v16/react/React.Children",permalink:"/react-book/docs/v16/react/React.Children",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/v16/react/React.Children.md",tags:[{label:"Children",permalink:"/react-book/docs/tags/children"},{label:"map",permalink:"/react-book/docs/tags/map"},{label:"forEach",permalink:"/react-book/docs/tags/for-each"},{label:"count",permalink:"/react-book/docs/tags/count"},{label:"toArray",permalink:"/react-book/docs/tags/to-array"},{label:"only",permalink:"/react-book/docs/tags/only"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,tags:["Children","map","forEach","count","toArray","only"]},sidebar:"v16Sidebar",previous:{title:"react",permalink:"/react-book/docs/v16/react/"},next:{title:"Component-PureComponent",permalink:"/react-book/docs/v16/react/Component-PureComponent"}},c={},p=[{value:"<code>map</code>",id:"map",level:2},{value:"<code>forEach</code>",id:"foreach",level:2},{value:"<code>count</code>",id:"count",level:2},{value:"<code>only</code>",id:"only",level:2},{value:"<code>toArray</code>",id:"toarray",level:2},{value:"<code>traverseContextPool</code>",id:"traversecontextpool",level:2}],s={toc:p},d="wrapper";function h(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"React.Children"),"\u8fd9\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"API"),"\u5e76\u4e0d\u5e38\u7528\uff0c\u4f46\u662f\u5982\u679c\u77e5\u9053\u5e76\u4f1a\u7528\u8fd9\u4e2aAPI\u7684\u8bdd\uff0c\u8fd8\u662f\u80fd\u63d0\u9ad8\u5f88\u5927\u6548\u7387\u7684\u3002\u4e14\u4e0d\u8bf4\u6548\u7387\u7684\u4e8b\u60c5\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u5f88\u6709\u8da3\uff0c\u503c\u5f97\u4e00\u63a2\u3002 "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"React.Children"),"\u4e0b\u7684API\u6709\u8fd9\u4e9b:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const Children = {\n  map,\n  forEach,\n  count,\n  toArray,\n  only,\n};\n")),(0,a.kt)("h2",{id:"map"},(0,a.kt)("inlineCode",{parentName:"h2"},"map")),(0,a.kt)("p",null,"\u8be5\u65b9\u6cd5\u4e0e\u6570\u7ec4\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"map"),"\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u90fd\u662f\u5bf9\u4e00\u4e2a\u5217\u8868\u7684\u6bcf\u4e00\u9879\u8fdb\u884c\u64cd\u4f5c\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/aaaaaAndy/picture/main/images/20220217112326.png",alt:"map"})),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"map"),"\u6e90\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * React.Children.map \u65b9\u6cd5\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  \n  // \u521d\u59cb\u5316\u4e00\u4e2aresult\u6570\u7ec4\uff0c\u7528\u6765\u4fdd\u5b58\u904d\u5386\u540e\u5f97\u5230\u7684\u65b0child\n  const result = [];\n  \n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  \n  // \u8fd4\u56de\u8fd9\u4e2aresult\uff0cforEach\u4e0d\u7528\u8fd4\u56de\n  return result;\n}\n\n/**\n * \u6839\u636e\u4e0d\u540c\u6761\u76ee\u7684 key \u904d\u5386 Elements \u5217\u8868\n *\n * @param {array} children React.children\uff0c\u4e00\u4e2a\u7c7b\u6570\u7ec4\u7684\u7ed3\u6784\n * @param {array} array \u904d\u5386\u540e\u7684\u8fd4\u56de\u503c\uff0c\u4e00\u4e2a\u6570\u7ec4\u7ed3\u6784\n * @param {string} prefix \u5143\u7d20key\u503c\uff0c\u5982\u679c\u9012\u5f52\u53ef\u6839\u636e/\u5212\u5206\n * @param {function} func map\u65b9\u6cd5\u4f20\u5165\u7684\u9488\u5bf9\u5404\u4e2a\u5143\u7d20\u5904\u7406\u7684\u51fd\u6570\n * @param {object} context \u4e0a\u4e0b\u6587\n */\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  let escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  // \u521b\u5efatraverseContext\u5bf9\u8c61\uff0c\u7528\u4e8e\u8bb0\u5f55\u904d\u5386\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\n  const traverseContext = getPooledTraverseContext(\n    array,\n    escapedPrefix,\n    func,\n    context,\n  );\n\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\n  // \u91ca\u653etraverseContext\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * \u8c03\u7528 map \u65b9\u6cd5\u4f20\u5165\u7684 func \u65b9\u6cd5\u5904\u7406\u6bcf\u4e00\u4e2a child\n *\n * @param {object} bookKeeping traverseContext \u5bf9\u8c61\n * @param {null|string|number|object} child child \u5bf9\u8c61\n * @param {string} childKey child\u5bf9\u5e94\u5339\u914d\u7684key\n */\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  const {result, keyPrefix, func, context} = bookKeeping;\n\n  let mappedChild = func.call(context, child, bookKeeping.count++);\n\n  // \u5982\u679c\u7ecf\u8fc7map\u7684func\u65b9\u6cd5\u5904\u7406\u540e\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u7ee7\u7eed\u8c03\u7528mapIntoWithKeyPrefixInternal\u65b9\u6cd5\n  // \u5426\u5219\u5c06\u7ecf\u8fc7map\u7684func\u65b9\u6cd5\u5904\u7406\u540e\u5f97\u5230\u7684\u5bf9\u8c61\u653e\u5165result\u4e2d\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, c => c);\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(\n        mappedChild,\n        // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        keyPrefix +\n        (mappedChild.key && (!child || child.key !== mappedChild.key)\n          ? escapeUserProvidedKey(mappedChild.key) + '/'\n          : '') +\n        childKey,\n      );\n    }\n    result.push(mappedChild);\n  }\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * \u904d\u5386\u6240\u6709\u7684 children\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * \u904d\u5386\u6240\u6709\u7684 children\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f traverseAllChildren \u7684\u5177\u4f53\u5b9e\u73b0\n * 1. \u5982\u679c\u5b50\u5143\u7d20\u662f\u5355\u8282\u70b9\u5143\u7d20\uff0c\u5982string\u3001number\u3001\u90e8\u5206object\u7b49\uff0c\u5219\u76f4\u63a5\u8c03\u7528callback\u51fd\u6570\u5904\u7406\n * 2. \u5982\u679c\u5b50\u5143\u7d20\u662f\u591a\u8282\u70b9\u5143\u7d20\uff0c\u5982\u6570\u7ec4\u3001\u8fed\u4ee3\u5668\u7b49\uff0c\u5219\u904d\u5386\u6570\u7ec4\u6216\u8fed\u4ee3\u5668\uff0c\u5e76\u4e14\u9012\u5f52\u8c03\u7528\u81ea\u8eab\n *\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  callback,\n  traverseContext\n) {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  // \u662f\u5426\u8981\u8c03\u7528 callback\n  let invokeCallback = false;\n\n  // \u8fd9\u91cc\u4e3b\u8981\u662f\u5224\u65ad\u662f\u5355\u8282\u70b9\u8fd8\u662f\u591a\u8282\u70b9\n  // \u5982null, string, number, object\u7b49\u90fd\u662f\u5355\u8282\u70b9\u60c5\u51b5\uff0c\u53ef\u76f4\u63a5\u8c03\u7528callback\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  // \u5355\u8282\u70b9\u60c5\u51b5\uff0c\u76f4\u63a5\u8c03\u7528callback\n  if (invokeCallback) {\n    // \u8fd9\u91cc\u5c31\u901a\u8fc7\u8c03\u7528\u4f20\u5165\u7684calback\u904d\u5386\u6bcf\u4e2a\u8282\u70b9\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n    );\n\n    // \u5355\u8282\u70b9\uff0c\u8fd9\u91cc\u76f4\u63a5return\u6389\u4e86\uff0c\u4e0d\u4f1a\u518d\u7ee7\u7eed\u5f80\u4e0b\u8d70\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    // \u5982\u679c\u662f\u4e2a\u6570\u7ec4\u5f62\u5f0f\uff0c\u904d\u5386\u9012\u5f52\u8c03\u7528 traverseAllChildrenImpl\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        callback,\n        traverseContext,\n      );\n    }\n  } else {\n    // \u5982\u679c\u662f\u8fed\u4ee3\u5668\u5f62\u5f0f\uff0c\u4e5f\u8fdb\u884c\u8fed\u4ee3\u9012\u5f52\u8c03\u7528 traverseAllChildrenImpl\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      const iterator = iteratorFn.call(children);\n      let step;\n      let ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(\n          child,\n          nextName,\n          callback,\n          traverseContext,\n        );\n      }\n    } else if (type === 'object') {\n      let addendum = '';\n      const childrenString = '' + children;\n      // \u5982\u679c\u4e0d\u662f REACT_PORTAL_TYPE, REACT_ELEMENT_TYPE \u4e24\u79cd\u7c7b\u578b\u7684\u62a5\u9519\uff0c\u5219\u76f4\u63a5\u8fdb\u884c\u62a5\u9519\u63d0\u793a\n      invariant(\n        false,\n        'Objects are not valid as a React child (found: %s).%s',\n        childrenString === '[object Object]'\n          ? 'object with keys {' + Object.keys(children).join(', ') + '}'\n          : childrenString,\n        addendum,\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\n")),(0,a.kt)("h2",{id:"foreach"},(0,a.kt)("inlineCode",{parentName:"h2"},"forEach")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"forEach"),"\u4e0e",(0,a.kt)("inlineCode",{parentName:"p"},"map"),"\u7c7b\u4f3c\uff0c\u90fd\u662f\u5bf9",(0,a.kt)("inlineCode",{parentName:"p"},"children"),"\u8fdb\u884c\u904d\u5386\uff0c\u53ea\u4e0d\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"forEach"),"\u4e0d\u7528\u8fd4\u56de\u4e00\u4e2a\u65b0\u6570\u7ec4\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/aaaaaAndy/picture/main/images/20220217114005.png",alt:"forEach"})),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"forEach"),"\u5165\u53e3\u6e90\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Iterates through children that are typically specified as `props.children`.\n * \u8fd9\u91cc\u4e0emapIntoWithKeyPrefixInternal\u51fd\u6570\u76f8\u601d\uff0c\u76f4\u63a5\u8fdb\u5165\u904d\u5386\u9012\u5f52\u8c03\u7528\uff0c\u4e0d\u7528\u65b0\u5efa\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u65b0\u751f\u6210\u7684child\uff0c\u4e5f\u4e0d\u7528\u8fd4\u56de\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  const traverseContext = getPooledTraverseContext(\n    null,\n    null,\n    forEachFunc,\n    forEachContext,\n  );\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n")),(0,a.kt)("h2",{id:"count"},(0,a.kt)("inlineCode",{parentName:"h2"},"count")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"count"),"\u7528\u6765\u8ba1\u7b97children\u7684\u6570\u91cf\uff0c\u8fd4\u56de\u503c\u4e3a\u6570\u91cf\u3002"),(0,a.kt)("p",null,"\u6b64\u65b9\u6cd5\u76f4\u63a5\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"traverseAllChildren"),"\uff0c\u56e0\u8be5\u65b9\u6cd5\u6bcf\u6b21\u904d\u5386\u4e00\u4e2achild\u90fd\u4f1a\u8fd4\u56de1\uff0c\u5982\u679c\u9012\u5f52\u904d\u5386\u5219\u4f1a\u8bbe\u7f6e\u53d8\u91cf",(0,a.kt)("inlineCode",{parentName:"p"},"subtreeCount"),"\u7d2f\u52a0\u603b\u6570\u91cf\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, () => null, null);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  callback,\n  traverseContext\n) {\n\n  // other code ...\n\n  // \u5355\u8282\u70b9\u60c5\u51b5\uff0c\u76f4\u63a5\u8c03\u7528callback\n  if (invokeCallback) {\n    // \u8fd9\u91cc\u5c31\u901a\u8fc7\u8c03\u7528\u4f20\u5165\u7684calback\u904d\u5386\u6bcf\u4e2a\u8282\u70b9\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n    );\n\n    // \u5355\u8282\u70b9\uff0c\u8fd9\u91cc\u76f4\u63a5return\u6389\u4e86\uff0c\u4e0d\u4f1a\u518d\u7ee7\u7eed\u5f80\u4e0b\u8d70\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  // \u8bb0\u5f55\u5143\u7d20\u7684\u6570\u91cf\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    // \u5982\u679c\u662f\u4e2a\u6570\u7ec4\u5f62\u5f0f\uff0c\u904d\u5386\u9012\u5f52\u8c03\u7528 traverseAllChildrenImpl\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      \n      // \u8fd9\u91cc\u8bb0\u5f55\u9012\u5f52\u8282\u70b9\u7684\u6570\u91cf\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        callback,\n        traverseContext,\n      );\n    }\n  }\n\n  // \u6700\u7ec8\u8fd4\u56de\u8fd9\u4e2asubtreeCount\uff0c\u5373\u904d\u5386\u7684\u8282\u70b9\u6570\u91cf\n  return subtreeCount;\n}\n")),(0,a.kt)("h2",{id:"only"},(0,a.kt)("inlineCode",{parentName:"h2"},"only")),(0,a.kt)("p",null,"\u6821\u9a8c\u4f20\u5165\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"children"),"\u662f\u5426\u4e3a\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"REACT_ELEMENT_TYPE"),"\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5982\u679c\u662f\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"children"),"\uff0c\u5426\u5219\u62a5\u9519\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  invariant(\n    isValidElement(children),\n    'React.Children.only expected to receive a single React element child.',\n  );\n  return children;\n}\n")),(0,a.kt)("h2",{id:"toarray"},(0,a.kt)("inlineCode",{parentName:"h2"},"toArray")),(0,a.kt)("p",null,"\u5c06",(0,a.kt)("inlineCode",{parentName:"p"},"children"),"\u8f6c\u6362\u4e3a\u6570\u7ec4\u5f62\u5f0f\uff0c\u8fd9\u91cc\u8ddf",(0,a.kt)("inlineCode",{parentName:"p"},"map"),"\u65b9\u6cd5\u4e00\u6837\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"mapIntoWithPrefixInternal"),"\uff0c\u53ea\u662f\u4f20\u5165\u7684\u904d\u5386\u65b9\u6cd5\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"child => child"),"\uff0c\u4ee5\u6b64\u6765\u4fdd\u8bc1\u53ea\u662f\u8fd4\u56de\u539f\u6765\u7684\u5143\u7d20\uff0c\u4e0d\u751f\u6210\u65b0\u8282\u70b9\uff0c\u6700\u7ec8\u8fd4\u56de",(0,a.kt)("inlineCode",{parentName:"p"},"result"),"\u6570\u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  const result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, child => child);\n  return result;\n}\n")),(0,a.kt)("h2",{id:"traversecontextpool"},(0,a.kt)("inlineCode",{parentName:"h2"},"traverseContextPool")),(0,a.kt)("p",null,"\u8be5\u5bf9\u8c61\u7528\u6765\u4fdd\u5b58",(0,a.kt)("inlineCode",{parentName:"p"},"traverseContext"),"\uff0c\u907f\u514d\u91cd\u590d\u521b\u5efa\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"getPooledTraverseContext"),"\u5c31\u662f\u4ece",(0,a.kt)("inlineCode",{parentName:"p"},"pool"),"\u91cc\u9762\u627e\u4e00\u4e2a\u5bf9\u8c61\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"releaseTraverseContext"),"\u4f1a\u628a\u5f53\u524d\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u5bf9\u8c61\u6e05\u7a7a\u7136\u540e\u653e\u56de\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"pool"),"\u4e2d\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// \u7f13\u5b58\u6c60\u4e2d\u53ef\u4ee5\u7f13\u5b58\u7684`traverseContext`\u5bf9\u8c61\u7684\u6570\u91cf\nconst POOL_SIZE = 10\nconst traverseContextPool = []\n\n/**\n * \u83b7\u53d6\u4e00\u4e2a traverseContext \u5bf9\u8c61\n *\n * @param {array} mapResult \u7528\u4e8e\u5b58\u653e\u904d\u5386\u7ed3\u679c\u7684\u6570\u7ec4\n * @param {string} keyPrefix \u5faa\u73af\u5143\u7d20\u5bf9\u5e94key\u503c\n * @param {function} mapFunction \u904d\u5386\u51fd\u6570\n * @param {object} mapContext \u904d\u5386\u51fd\u6570\u7684\u4e0a\u4e0b\u6587, map\u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u4e00\u822c\u4e0d\u4f20\n * @return {{result, func, context, count: number, keyPrefix}|*}\n */\nfunction getPooledTraverseContext(\n  mapResult,\n  keyPrefix,\n  mapFunction,\n  mapContext\n) {\n  // \u5982\u679c\u7f13\u51b2\u6c60\u4e2d\u6709\u5bf9\u8c61\uff0c\u76f4\u63a5\u8fd4\u56de\n  // \u5426\u5219\u65b0\u5efa\u4e00\u4e2atraverseContext\u5bf9\u8c61\n  if (traverseContextPool.length) {\n    const traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0,\n    };\n  }\n}\n\n/**\n * \u91ca\u653e traverseContext \u5bf9\u8c61\n * @param {object} traverseContext \u5f85\u91ca\u653e\u7684 traverseContext \u5bf9\u8c61\n */\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n")),(0,a.kt)("p",null,"\u6309\u7167\u8fd9\u4e2a\u6d41\u7a0b\u6765\u770b\uff0c\u662f\u4e0d\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"pool"),"\u6c38\u8fdc\u90fd\u53ea\u6709\u4e00\u4e2a\u503c\u5462\uff0c\u6bd5\u7adf\u63a8\u51fa\u4e4b\u540e\u64cd\u4f5c\u5b8c\u4e86\u5c31\u63a8\u5165\u4e86\uff0c\u8fd9\u4e48\u5faa\u73af\u7740\u3002\u7b54\u6848\u80af\u5b9a\u662f\u5426\u7684\uff0c\u8fd9\u5c31\u8981\u8bb2\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"React.Children.map"),"\u7684\u4e00\u4e2a\u7279\u6027\u4e86\uff0c\u90a3\u5c31\u662f\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"map"),"\u8fd4\u56de\u7684\u5982\u679c\u662f\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd8\u4f1a\u7ee7\u7eed\u5c55\u5f00\uff0c\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u8fc7\u7a0b\u3002\u65e2\u7136\u6d89\u53ca\u5230\u9012\u5f52\u90a3\u5c31\u4e0d\u4f1a\u53ea\u6709\u4e00\u4e2a\u503c\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u7528\u5230\u7f13\u5b58\u6c60\u7684\u6982\u5ff5\u5c31\u662f\u4e3a\u4e86\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u80fd\u590d\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"traverseContext"),"\uff0c\u4e0d\u81f3\u4e8e\u6bcf\u6b21\u90fd\u65b0\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"mapSingleChildIntoContext"),"\u8fd9\u4e2a\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"React.Children.map(children, callback)"),"\u8fd9\u91cc\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"callback"),"\uff0c\u5c31\u662f\u6211\u4eec\u4f20\u5165\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5e76\u5f97\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"map"),"\u4e4b\u540e\u7684\u7ed3\u679c\u3002\u6ce8\u610f\u91cd\u70b9\u6765\u4e86\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u5982\u679c",(0,a.kt)("inlineCode",{parentName:"strong"},"map"),"\u4e4b\u540e\u7684\u8282\u70b9\u8fd8\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u90a3\u4e48\u518d\u6b21\u8fdb\u5165",(0,a.kt)("inlineCode",{parentName:"strong"},"mapIntoWithKeyPrefixInternal"),"\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u4f1a\u518d\u6b21\u4ece",(0,a.kt)("inlineCode",{parentName:"strong"},"pool"),"\u91cc\u9762\u53bb",(0,a.kt)("inlineCode",{parentName:"strong"},"context"),"\u4e86\uff0c\u800c",(0,a.kt)("inlineCode",{parentName:"strong"},"pool"),"\u7684\u610f\u4e49\u5927\u6982\u4e5f\u5c31\u662f\u5728\u8fd9\u91cc\u4e86\uff0c\u5982\u679c\u5faa\u73af\u5d4c\u5957\u591a\u4e86\uff0c\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u5bf9\u8c61\u521b\u5efa\u548c",(0,a.kt)("inlineCode",{parentName:"strong"},"gc"),"\u7684\u635f\u8017\u3002")))}h.isMDXComponent=!0}}]);