"use strict";(self.webpackChunkreact_book=self.webpackChunkreact_book||[]).push([[9363],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},l="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),l=s(t),m=i,k=l["".concat(p,".").concat(m)]||l[m]||c[m]||r;return t?a.createElement(k,o(o({ref:n},d),{},{components:t})):a.createElement(k,o({ref:n},d))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=m;var u={};for(var p in n)hasOwnProperty.call(n,p)&&(u[p]=n[p]);u.originalType=e,u[l]="string"==typeof e?e:i,o[1]=u;for(var s=2;s<r;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6420:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>u,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const r={},o=void 0,u={unversionedId:"v16/hooks/useState-useReducer",id:"v16/hooks/useState-useReducer",title:"useState-useReducer",description:"\u672c\u7bc7\u4ecb\u7ecduseState\u548cuseReducer\uff1a",source:"@site/docs/v16/hooks/useState-useReducer.md",sourceDirName:"v16/hooks",slug:"/v16/hooks/useState-useReducer",permalink:"/react-book/docs/v16/hooks/useState-useReducer",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/v16/hooks/useState-useReducer.md",tags:[],version:"current",frontMatter:{},sidebar:"v16Sidebar",previous:{title:"useEffect-useLayoutEffect",permalink:"/react-book/docs/v16/hooks/useEffect-useLayoutEffect"}},p={},s=[{value:"1. \u533a\u5206\u6302\u8f7d",id:"1-\u533a\u5206\u6302\u8f7d",level:3},{value:"2. Mount",id:"2-mount",level:3},{value:"3. dispatchAction",id:"3-dispatchaction",level:3},{value:"4. Update",id:"4-update",level:3},{value:"5. \u793a\u4f8b",id:"5-\u793a\u4f8b",level:3},{value:"5.1  \u6570\u636e\u7ed3\u6784",id:"51--\u6570\u636e\u7ed3\u6784",level:4},{value:"5.2 \u89e6\u53d1action",id:"52-\u89e6\u53d1action",level:4}],d={toc:s},l="wrapper";function c(e){let{components:n,...t}=e;return(0,i.kt)(l,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u672c\u7bc7\u4ecb\u7ecd",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"useReducer"),"\uff1a"),(0,i.kt)("h3",{id:"1-\u533a\u5206\u6302\u8f7d"},"1. \u533a\u5206\u6302\u8f7d"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u662f\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\uff0c\u800c",(0,i.kt)("inlineCode",{parentName:"p"},"useReducer"),"\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u53c8\u6781\u4e3a\u76f8\u4f3c\uff0c\u5b9e\u9645\u4e0a",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"useReducer"),"\u7684\u9609\u5272\u7248\u3002\u6240\u4ee5\u672c\u7bc7\u5c06\u8fd9\u4e24\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\u653e\u5728\u4e00\u8d77\u8bb2\u89e3\u3002"),(0,i.kt)("p",null,"\u4ece",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\u57fa\u7840\u7ae0\u91cc\u4e86\u89e3\u5230\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"react"),"\u4f1a\u6839\u636e\u662f\u5426\u662f\u7b2c\u4e00\u6b21\u6e32\u67d3\u6765\u6302\u8f7d\u4e0d\u540c\u7684\u5bf9\u8c61\uff1a\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u6e32\u67d3\uff0c\u5219\u6302\u8f7d",(0,i.kt)("inlineCode",{parentName:"p"},"HooksDispatcherOnMount"),"\uff0c\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u6b21\u6e32\u67d3\u5219\u6302\u8f7d",(0,i.kt)("inlineCode",{parentName:"p"},"HooksDispatcherOnUpdate"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"function renderWithHooks() {\n  // code...\n  ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  // code...\n}\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Mount"),"\u9636\u6bb5\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"Update"),"\u9636\u6bb5",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\u7684\u5b9a\u4e49\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// Mount \u9636\u6bb5Hooks\u7684\u5b9a\u4e49\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useResponder: createDeprecatedResponderListener,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n};\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// Update\u9636\u6bb5Hooks\u7684\u5b9a\u4e49\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useResponder: createDeprecatedResponderListener,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n};\n")),(0,i.kt)("h3",{id:"2-mount"},"2. Mount"),(0,i.kt)("p",null,"\u4ece",(0,i.kt)("inlineCode",{parentName:"p"},"HooksDispatcherOnMount"),"\u53ef\u4ee5\u5f97\u5230\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u5bf9\u5e94\u65b9\u6cd5",(0,i.kt)("inlineCode",{parentName:"p"},"mountState"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"useReducer"),"\u5bf9\u5e94\u65b9\u6cd5",(0,i.kt)("inlineCode",{parentName:"p"},"mountReducer"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"function mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  // \u83b7\u53d6\u5f53\u524d\u7684Hook\u8282\u70b9\uff0c\u540c\u65f6\u5c06\u5f53\u524dHook\u6dfb\u52a0\u5230Hook\u94fe\u8868\u4e2d\n  // \u6302\u8f7d\u4e00\u4e2a\u5168\u5c40\u7684workInProgressHook\n  const hook = mountWorkInProgressHook();\n\n  // Tips1\uff1a\u83b7\u53d6\u521d\u59cb\u503c\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  // \u58f0\u660e\u4e00\u4e2a\u94fe\u8868\u6765\u5b58\u653e\u66f4\u65b0\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    // Tips2\uff1a\u5982\u679c\u662fstate\u5904\u7406\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684reducer\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  });\n  // \u8fd4\u56de\u4e00\u4e2adispatch\u65b9\u6cd5\u7528\u6765\u4fee\u6539\u72b6\u6001\uff0c\u5e76\u5c06\u6b64\u6b21\u66f4\u65b0\u6dfb\u52a0update\u94fe\u8868\u4e2d\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  // \u8fd4\u56de\u72b6\u6001\u548c\u4fee\u6539\u72b6\u6001\u7684\u65b9\u6cd5\n  return [hook.memoizedState, dispatch];\n}\n\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"function mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  // \u83b7\u53d6\u5f53\u524d\u7684Hook\u8282\u70b9\uff0c\u540c\u65f6\u5c06\u5f53\u524dHook\u6dfb\u52a0\u5230Hook\u94fe\u8868\u4e2d\n  // \u6302\u8f7d\u4e00\u4e2a\u5168\u5c40\u7684workInProgressHook\n  const hook = mountWorkInProgressHook();\n\n  // Tips1\uff1a\u83b7\u53d6\u521d\u59cb\u503c\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n    // \u58f0\u660e\u4e00\u4e2a\u94fe\u8868\u6765\u5b58\u653e\u66f4\u65b0\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  });\n  // \u8fd4\u56de\u4e00\u4e2adispatch\u65b9\u6cd5\u7528\u6765\u4fee\u6539\u72b6\u6001\uff0c\u5e76\u5c06\u6b64\u6b21\u66f4\u65b0\u6dfb\u52a0update\u94fe\u8868\u4e2d\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  // \u8fd4\u56de\u72b6\u6001\u548c\u4fee\u6539\u72b6\u6001\u7684\u65b9\u6cd5\n  return [hook.memoizedState, dispatch];\n}\n")),(0,i.kt)("p",null,"\u5728\u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"mountWorkInProgressHook()"),"\u7684\u4f5c\u7528\u662f\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u5982\u4e0b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"function mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    // \u5f53\u524dworkInProgressHook\u94fe\u8868\u4e3a\u7a7a\u7684\u8bdd\uff0c\n    // \u5c06\u5f53\u524dHook\u4f5c\u4e3a\u7b2c\u4e00\u4e2aHook\n    // currentlyRenderingFiber\u4e3a\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684fiber\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    // \u5426\u5219\u5c06\u5f53\u524dHook\u6dfb\u52a0\u5230Hook\u94fe\u8868\u7684\u672b\u5c3e\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n")),(0,i.kt)("p",null,"\u4ece\u4ee5\u4e0a\u4ee3\u7801\u4e2d\u53ef\u4ee5\u77e5\u9053\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"mountState"),"\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"mountReducer"),"\u53ea\u6709\u83b7\u53d6\u521d\u59cb\u503c\u548c\u4f7f\u7528\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"reducer"),"\u4e0d\u540c\uff0c\u5982\u679c\u662f\u9488\u5bf9",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u7684\u5904\u7406\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"react"),"\u4e3a\u5176\u51c6\u5907\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"reducer"),"\uff0c\u90a3\u63a5\u4e0b\u91cc\u770b\u770b\u8fd9\u4e2a\u9ed8\u8ba4\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"reducer"),"\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// \u9ed8\u8ba4\u76f4\u63a5\u8fd4\u56deaction\u7684\u503c\uff0c\u65b0\u7684state\u4f1a\u4f5c\u4e3a\u53c2\u6570action\u4f20\u5165\uff0c\u6240\u4ee5\u662f\u76f4\u63a5\u8fd4\u56de\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  return typeof action === 'function' ? action(state) : action;\n}\n")),(0,i.kt)("h3",{id:"3-dispatchaction"},"3. dispatchAction"),(0,i.kt)("p",null,"\u7531",(0,i.kt)("inlineCode",{parentName:"p"},"mountState"),"\u6e90\u7801\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u77e5\u9053\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"dispatchAction"),"\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\u8fd4\u56de\u7684\u7528\u4e8e\u66f4\u65b0\u72b6\u6001\u7684\u65b9\u6cd5\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// fiber \u5c31\u662f\u5f53\u524d functionComponent \u7684 Fiber \u5bf9\u8c61\n// queue \u662f\u9996\u6b21\u6e32\u67d3\u7684\u65f6\u5019 new \u7684\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7528\u4e8e\u5b58\u653e\u540e\u7eed\u7684 dispatchAction \u7684 action\n// action \u5c31\u662f\u6211\u4eec\u5199\u7684 setCount(count + 1)\nfunction dispatchAction<S, A>(\n fiber: Fiber,\n queue: UpdateQueue<S, A>,\n action: A,\n) {\n const currentTime = requestCurrentTimeForUpdate();\n const suspenseConfig = requestCurrentSuspenseConfig();\n const expirationTime = computeExpirationForFiber(\n   currentTime,\n   fiber,\n   suspenseConfig,\n );\n\n // \u521b\u5efa\u4e00\u4e2a update\n const update: Update<S, A> = {\n   expirationTime,\n   suspenseConfig,\n   action,\n   eagerReducer: null,\n   // \u63d0\u524d\u8ba1\u7b97\u597d\u7684\u8fd9\u4e2a update \u4ea7\u751f\u7684\u53d8\u5316\uff0c\u7528\u4e8e\u4f18\u5316\u6027\u80fd\n   eagerState: null,\n   next: (null: any),\n };\n\n // Append the update to the end of the list.\n const pending = queue.pending;\n if (pending === null) {\n   // This is the first update. Create a circular list.\n   update.next = update;\n } else {\n   update.next = pending.next;\n   pending.next = update;\n }\n \n // \u5c06update\u6302\u8f7d\u5230queue.pending\u4e0a\uff0c\u5e76\u8ba1\u7b97\u5f53\u524dupdate\u7684eagerState\n // \u7b49scheduleWork\u8c03\u5ea6\u5230\u5f53\u524d\u51fd\u6570\u7ec4\u4ef6\u8fdb\u884c\u66f4\u65b0\u65f6\uff0c\u8ba1\u7b97update\u5bf9\u8c61\uff0c\u83b7\u53d6eagerState\uff0c\u8d4b\u503c\u7ed9memoizedState\n queue.pending = update;\n\n const alternate = fiber.alternate;\n if (\n   fiber === currentlyRenderingFiber ||\n   (alternate !== null && alternate === currentlyRenderingFiber)\n ) {\n   // This is a render phase update. Stash it in a lazily-created map of\n   // queue -> linked list of updates. After this render pass, we'll restart\n   // and apply the stashed updates on top of the work-in-progress hook.\n   // \u5904\u7406\u5728render\u65f6\u4ea7\u751f\u7684\u66f4\u65b0\uff0c\u5c06\u5176\u6807\u8bb0\uff0c\u5f85\u8fd9\u6b21\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u518d\u91cd\u65b0\u5f00\u542f\u8fd9\u6b21\u66f4\u65b0\n   didScheduleRenderPhaseUpdate = true;\n   update.expirationTime = renderExpirationTime;\n   currentlyRenderingFiber.expirationTime = renderExpirationTime;\n } else {\n   if (\n     fiber.expirationTime === NoWork &&\n     (alternate === null || alternate.expirationTime === NoWork)\n   ) {\n    // \u5f53\u524dfiber\u4e0a\u65e0\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97state\uff0c\u5982\u679c\u65b0\u8001state\u76f8\u540c\uff0c\u5219\u8df3\u8fc7\u8fd9\u6b21\u66f4\u65b0\n     // The queue is currently empty, which means we can eagerly compute the\n     // next state before entering the render phase. If the new state is the\n     // same as the current state, we may be able to bail out entirely.\n     const lastRenderedReducer = queue.lastRenderedReducer;\n     if (lastRenderedReducer !== null) {\n       let prevDispatcher;\n  \n       try {\n         const currentState: S = (queue.lastRenderedState: any);\n         const eagerState = lastRenderedReducer(currentState, action);\n         // Stash the eagerly computed state, and the reducer used to compute\n         // it, on the update object. If the reducer hasn't changed by the\n         // time we enter the render phase, then the eager state can be used\n         // without calling the reducer again.\n         update.eagerReducer = lastRenderedReducer;\n         update.eagerState = eagerState;\n         if (is(eagerState, currentState)) {\n           // Fast path. We can bail out without scheduling React to re-render.\n           // It's still possible that we'll need to rebase this update later,\n           // if the component re-renders for a different reason and by that\n           // time the reducer has changed.\n           return;\n         }\n       } catch (error) {\n         // Suppress the error. It will throw again in the render phase.\n       } finally {}\n     }\n   }\n  \n   // \u8fdb\u5165render\u9636\u6bb5\n   scheduleWork(fiber, expirationTime);\n }\n}\n")),(0,i.kt)("p",null,"\u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5f53\u6211\u4eec\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\u8fd4\u56de\u7684\u66f4\u65b0\u65b9\u6cd5\u65f6\uff0c\u6700\u7ec8\u8fd8\u662f\u8c03\u7528\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"scheduleWork()"),"\uff0c\u8fdb\u5165\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"fiber"),"\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"render"),"\u9636\u6bb5\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"updateContainer()"),"\u5f88\u50cf\uff0c\u4e4b\u540e\u5c31\u5faa\u73af\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"fiber"),"\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fdb\u5165",(0,i.kt)("inlineCode",{parentName:"p"},"render"),"\u9636\u6bb5\u3002"),(0,i.kt)("h3",{id:"4-update"},"4. Update"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"HooksDispatcherOnUpdate"),"\u4e3a\u66f4\u65b0\u9636\u6bb5\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks"),"\u5408\u96c6\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u5728\u6b64\u9636\u6bb5\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"updateState"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"useReducer"),"\u5728\u6b64\u9636\u6bb5\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"updateReducer"),"\u3002\u5982\u679c\u6df1\u5165",(0,i.kt)("inlineCode",{parentName:"p"},"updateState"),"\u7684\u6e90\u7801\u53bb\u770b\uff0c\u4f1a\u53d1\u73b0\u66f4\u5927\u7684\u60ca\u559c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"function updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n")),(0,i.kt)("p",null,"\u4ece\u4ee5\u4e0a\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u6765\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"updateState"),"\u6700\u7ec8\u8fd8\u662f\u8c03\u7528\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"updateReducer"),"\uff0c\u4f20\u5165\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"basicStateReducer"),"\uff0c\u800c",(0,i.kt)("inlineCode",{parentName:"p"},"basicStateReducer"),"\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u5e42\u7b49\u64cd\u4f5c\uff0c\u4f20\u5165\u4ec0\u4e48\uff0c\u8fd4\u56de\u4ec0\u4e48\u3002\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u8bf4",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"useReducer"),"\u9609\u5272\u7248\u7684\u539f\u56e0\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"updateReducer"),"\u6e90\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// 1. FunctionComponent \u4e0d\u662f\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u6ca1\u6709 this\uff0c\u6ca1\u6709 state\uff0c\u4f46\u662f React \u7684 Fiber \u5bf9\u8c61\u4e3a\u6b64\u63d0\u4f9b\u4e86\u53ef\u80fd\uff0c\n//    \u7531\u4e8e Fiber \u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u5c31\u5c06 FunctionComponent \u4e2d\u65e0\u6cd5\u6302\u8f7d\u7684\u4e00\u4e9b\u503c\u548c\u65b9\u6cd5\u6302\u8f7d\u5230\u4e86 FunctionComponent \u5bf9\u5e94\u7684 Fiber \u5bf9\u8c61\u4e0a\uff0c\n//    \u5e76\u4e14\u8d77\u4e86\u4e2a\u540d\u5b57\u53eb\u505a Hook\u3002\u5177\u4f53\u5c31\u662f\u6302\u8f7d\u5230 Fiber \u5bf9\u8c61\u7684 memoizedState \u4e0a\u3002\n// 2. Fiber \u4e2d\u4e5f\u4f7f\u7528\u4e86 Update \u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u66f4\u65b0\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u6bcf\u6b21\u70b9\u51fb\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a update\uff0c\u653e\u5165 Hook \u5bf9\u8c61\u7684 queue \u4e2d\uff0c\n//    \u7136\u540e\u89e6\u53d1\u4e00\u6b21\u4efb\u52a1\u8c03\u5ea6\uff0c\u5c06\u8fd9\u4e9b\u66f4\u65b0\u6267\u884c\u3002\n// 3. Hooks \u5bf9\u5916\u66b4\u9732\u7684\u63a5\u53e3\uff0c\u5176\u5b9e\u5c31\u662f\u7528\u6765\u64cd\u4f5c Hook \u5bf9\u8c61\u7684\uff0cHook \u5bf9\u8c61\u901a\u8fc7 Fiber \u548c FunctionComponent \u5b8c\u6210\u7ed1\u5b9a\uff0c\n//    \u95f4\u63a5\u63a7\u5236\u4e86 FunctionComponent \u7684\u884c\u4e3a\u3002\n// 4. Hooks \u7684\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u4ea7\u751f update \u7684\u65f6\u5019\uff0c\u5982\u679c\u5f53\u524d fiber \u4e0a\u65e0\u66f4\u65b0\u4efb\u52a1\uff0c\u4f1a\u8ba1\u7b97\u672c\u6b21 update \u7684\u7ed3\u679c\uff0c\u4e0e\u4ea7\u751f update \u4e4b\u524d\u7684\u6bd4\u8f83\uff0c\n//    \u5982\u679c\u6ca1\u6709\u53d8\u5316\uff0c\u4e0d\u4f1a\u8fdb\u884c\u4efb\u52a1\u8c03\u5ea6\uff0c\u5982\u679c\u6709\u53d8\u5316\u7684\u8bdd\uff0c\u4f1a\u5c06\u7ed3\u679c\u5b58\u50a8\u8d77\u6765\uff0c\u4e0b\u6b21\u8c03\u5ea6\u7684\u65f6\u5019\u5c31\u4e0d\u7528\u518d\u8ba1\u7b97\u4e86\u3002\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  // \u590d\u5236\u4e00\u4e2a\u5f53\u524d\u7684 hook \u5bf9\u8c61\u6700\u4e3a\u5de5\u4f5c\u533a\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  // pendingQueue\u4e3a\u5f85\u6267\u884c\u7684\u66f4\u65b0\u961f\u5217\uff0c\u9700\u8981\u628apendingQueue\u961f\u5217\u8d4b\u7ed9baseQueue\u624d\u80fd\u6267\u884c\u66f4\u65b0\n  let pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    // \u5982\u679cbaseQueue\u961f\u5217\u6709\u5185\u5bb9\uff0c\u5219\u5408\u5e76baseQueue\u4e0ependingQueue\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      let baseFirst = baseQueue.next;\n      let pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  // \u5982\u679cbaseQueue\u6709\u5185\u5bb9\uff0c\u5219\u6267\u884c\u66f4\u65b0\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    let first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    // \u5faa\u73af\u5b8c\u6210 update\n    do {\n      const updateExpirationTime = update.expirationTime;\n      if (updateExpirationTime < renderExpirationTime) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        // \u4f18\u5148\u7ea7\u4e0d\u591f\uff0c\u4e0d\u8fdb\u884c\u66f4\u65b0\n        const clone: Update<S, A> = {\n          expirationTime: update.expirationTime,\n          suspenseConfig: update.suspenseConfig,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        if (updateExpirationTime > currentlyRenderingFiber.expirationTime) {\n          currentlyRenderingFiber.expirationTime = updateExpirationTime;\n          markUnprocessedUpdateTime(updateExpirationTime);\n        }\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            expirationTime: Sync, // This update is going to be committed so we never want uncommit it.\n            suspenseConfig: update.suspenseConfig,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Mark the event time of this update as relevant to this render pass.\n        // TODO: This should ideally use the true event time of this update rather than\n        // its priority which is a derived and not reverseable value.\n        // TODO: We should skip this update if it was already committed but currently\n        // we have no way of detecting the difference between a committed and suspended\n        // update here.\n        markRenderEventTimeAndConfig(\n          updateExpirationTime,\n          update.suspenseConfig,\n        );\n\n        // Process this update.\n        // \u6709 eagerReducer\uff0c\u8bf4\u660e\u8fd9\u4e2a action \u5df2\u7ecf\u5728\u7a7a\u95f2\u7684\u65f6\u5019\u5b8c\u6210\u4e86\u8ba1\u7b97\uff0c\u76f4\u63a5\u7528\u8fd9\u4e2a\u8ba1\u7b97\u7ed3\u679c\u5c31\u884c\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          // \u8c03\u7528 action \u8ba1\u7b97 newState\n          newState = reducer(newState, action);\n        }\n      }\n      // \u5faa\u73af\u8bfb\u53d6baseQueue\u5185\u5bb9\u8fdb\u884c\u8ba1\u7b97\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    // hook\u7684\u503c\u66f4\u65b0\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  // \u8fd9\u91cc\u7684dispatch\u5728mount\u9636\u6bb5\u6302\u8f7d\u4e86dispatchAction\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\n")),(0,i.kt)("h3",{id:"5-\u793a\u4f8b"},"5. \u793a\u4f8b"),(0,i.kt)("h4",{id:"51--\u6570\u636e\u7ed3\u6784"},"5.1  \u6570\u636e\u7ed3\u6784"),(0,i.kt)("p",null,"\u6211\u4eec\u4ee5\u4e0b\u9762\u4ee3\u7801\u4e3a\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import React, { useState } from 'react';\n\nfunction App(props, context) {\n    const [name, setName] = useState('andy');\n    const [age, setAge] = useState(12);\n    const [job, setJob] = useState('student');\n\n    return (\n        <div>\n            <div onClick={() => { setName('qiqi') }}>\n                <span>name:{name}</span>\n            </div>\n            <div onClick={() => { setAge(11) }}>\n                <span>age:{age}</span>\n            </div>\n            <div onClick={() => { setJob('worker') }}>\n                <span>{job}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n")),(0,i.kt)("p",null,"\u5bf9",(0,i.kt)("inlineCode",{parentName:"p"},"mount"),"\u9636\u6bb5",(0,i.kt)("inlineCode",{parentName:"p"},"debug"),"\uff0c\u83b7\u6089",(0,i.kt)("inlineCode",{parentName:"p"},"workInProgress"),"\u4e0a\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"memoizedState"),"\u5c5e\u6027\u5982\u4e0b\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/aaaaaAndy/picture/main/images202310071708029.jpg",alt:"useState-memorized"})),(0,i.kt)("p",null,"\u7531\u4e0a\u56fe\u53ef\u4ee5\u77e5\u9053\uff0c\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"react"),"\u5185\u90e8\uff0c\u4e0d\u540c\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u662f\u4ee5\u94fe\u8868\u5f62\u5f0f\u5b58\u653e\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"memoizedState"),"\u4e0a\uff0c\u6bcf\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u5bf9\u5e94\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u5b9e\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"mountState()"),"\u51fd\u6570\u5185\u90e8\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"mountWorkInProgressHook()"),"\u8fd4\u56de\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"hook"),"\u5bf9\u8c61\uff0c\u5e76\u4e14\u5bf9\u8c61\u5185\u90e8\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"memoizedState"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"baseState"),"\u8bb0\u5f55\u5bf9\u5e94",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u7684\u5f53\u524d\u503c\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"next"),"\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u3002"),(0,i.kt)("p",null,"\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"\u9636\u6bb5\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"updateReducer()"),"\u51fd\u6570\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"updateWorkInProgressHook()"),"\u5219\u662f\u4ece\u7b2c\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u5bf9\u8c61\u5f00\u59cb\u8fd4\u56de\uff0c\u76f4\u5230\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e5f\u5c31\u8981\u6c42",(0,i.kt)("inlineCode",{parentName:"p"},"mount"),"\u9636\u6bb5\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"\u9636\u6bb5\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u6570\u91cf\uff0c\u987a\u5e8f\u5fc5\u987b\u662f\u4e00\u81f4\u7684\u3002\u5426\u5219",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"\u8ba1\u7b97\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"hook"),"\u5bf9\u8c61\u5c31\u6709\u53ef\u80fd\u9519\u8bef\u7684\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u628a",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),"\u653e\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"if"),"\u6761\u4ef6\u8bed\u53e5\u4e2d\u6267\u884c\u7684\u539f\u56e0\u3002"),(0,i.kt)("h4",{id:"52-\u89e6\u53d1action"},"5.2 \u89e6\u53d1action"),(0,i.kt)("p",null,"\u90a3\u4e48\u5f53\u6211\u4eec\u70b9\u51fb\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"name:andy"),"\u6587\u5b57\uff0c\u89e6\u53d1\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"setName()"),"\u4e8b\u4ef6\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"setName"),"\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"mount"),"\u9636\u6bb5\u8fd4\u56de\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"dispatchAction"),"\u51fd\u6570\uff0c\u6240\u4ee5\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570\uff1b")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"dispatchAction"),"\u51fd\u6570\u5185\u90e8\u521d\u59cb\u5316\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"\u5bf9\u8c61\uff0c\u5e76\u5c06",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"\u5bf9\u8c61\u6302\u8f7d\u5230\u5bf9\u5e94\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"queue.pending"),"\u4e0a\uff0c\u7136\u540e\u8ba1\u7b97",(0,i.kt)("inlineCode",{parentName:"p"},"setName"),"\u4f20\u5165\u7684\u503c\uff0c\u66f4\u65b0",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"\uff1a"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// fiber\u662f\u5f53\u524d\u66f4\u65b0\u7684fiber\n// queue\u4ece\u6570\u636e\u7ed3\u6784\u7684\u56fe\u7247\u793a\u4f8b\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u5c31\u662fmemoizedState\u4e0b\u5404\u4e2ahook\u5bf9\u8c61\u7684queue\n// action\u662fsetName\u4f20\u5165\u7684\u53c2\u6570\uff0csetName('qiqi')\uff0c\u5373qiqi\nfunction dispatchAction(fiber, queue, action) {\n   // \u521b\u5efa\u4e00\u4e2a update\n  const update: Update<S, A> = {\n    expirationTime,\n    suspenseConfig,\n    // \u6b64action\u4ee3\u8868setName\u4f20\u5165\u7684\u53c2\u6570\uff0c\u5373:qiqi\n    action,\n    eagerReducer: null,\n    // \u63d0\u524d\u8ba1\u7b97\u597d\u7684\u8fd9\u4e2a update \u4ea7\u751f\u7684\u53d8\u5316\uff0c\u7528\u4e8e\u4f18\u5316\u6027\u80fd\n    eagerState: null,\n    next: (null: any),\n  };\n  \n  // \u5c06update\u6302\u8f7d\u5230queue.pending\u4e0a\uff0c\u5e76\u8ba1\u7b97\u5f53\u524dupdate\u7684eagerState\n  // \u7b49scheduleWork\u8c03\u5ea6\u5230\u5f53\u524d\u51fd\u6570\u7ec4\u4ef6\u8fdb\u884c\u66f4\u65b0\u65f6\uff0c\u8ba1\u7b97update\u5bf9\u8c61\uff0c\u83b7\u53d6eagerState\uff0c\u8d4b\u503c\u7ed9memoizedState\n  queue.pending = update;\n  \n  // \u5728useState\u4e2d\uff0clastRenderedReducer\u8fd8\u662f\u90a3\u4e2a\u9ed8\u8ba4\u7684reducer\n  const lastRenderedReducer = queue.lastRenderedReducer;\n  // \u6b64\u65f6currentState\u4e3a\u4e0a\u4e00\u4e2astate\uff0c\u5373andy\n  const currentState: S = (queue.lastRenderedState: any);\n  // \u8c03\u7528\u9ed8\u8ba4\u7684reducer\uff0c\u5176\u5b9e\u5c31\u662f\u4f20\u5165action,\u8fd4\u56deaction,\u5f97\u5230eagerState\u4e3aqiqi\n  const eagerState = lastRenderedReducer(currentState, action);\n  \n  // \u66f4\u65b0update\u4e0a\u7684\u4e24\u4e2a\u53d8\u91cf,eagetState\u4e3aqiqi\n  update.eagerReducer = lastRenderedReducer;\n  update.eagerState = eagerState;\n  \n  // \u5224\u65ad\u5982\u679c\u65b0\u8001state\u6ca1\u6709\u53d8\u5316\u7684\u8bdd\u5c31\u4e0d\u8fdb\u884c\u66f4\u65b0\uff0c\u5426\u5219\u5c31\u8fdb\u884c\u8c03\u5ea6\n  if (is(eagerState, currentState)) {\n    return;\n  }\n  \n  // scheduleWork\u5bf9\u5f53\u524dfiber\u5c55\u5f00\u65b0\u4e00\u8f6e\u7684\u8c03\u5ea6\n  scheduleWork(fiber, expirationTime);\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"scheduleWork"),"\u6700\u7ec8\u901a\u8fc7\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"beginWork"),"\uff0c\u518d\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"renderWithHooks"),"\u3002\u6b64\u65f6\u5728\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"let children = Component(props, secondArg);"),"\u65f6\uff0c\u76f8\u5f53\u4e8e\u91cd\u65b0\u6267\u884c\u4e86\u5f53\u524d\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"function component"),"\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"function component"),"\u5b9e\u9645\u4e0a\u6bcf\u6b21\u66f4\u65b0\u90fd\u4f1a\u91cd\u65b0\u6267\u884c\u4e00\u904d\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u540c\u9636\u6bb5\uff0c\u8981\u7ed9",(0,i.kt)("inlineCode",{parentName:"p"},"ReactCurrentDispatcher.current"),"\u6302\u8f7d\u4e0d\u540c\u5904\u7406\u65b9\u6cd5\u5408\u96c6\u7684\u539f\u56e0\u3002")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"function component"),"\u53ea\u6709\u7b2c\u4e00\u6b21\u6302\u8f7d\u65f6\u4f1a\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"mount"),"\u4e0a\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u5728\u66f4\u65b0\u9636\u6bb5\u90fd\u662f\u6267\u884c\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u6b64\u65f6\u91cd\u65b0\u6267\u884c\xb7",(0,i.kt)("inlineCode",{parentName:"p"},"function component"),"\uff0c\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"const [name, setName] = useState('andy')"),"\u65f6\uff0c\u5176\u5b9e\u6267\u884c\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"updateState"),"\u65b9\u6cd5\uff0c\u800c",(0,i.kt)("inlineCode",{parentName:"p"},"updateState"),"\u65b9\u6cd5\u53c8\u8c03\u7528\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"updateReducer"),"\u65b9\u6cd5\u3002"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// useState\u6b64\u65f6\u8c03\u7528updateState\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer, initialState)\n}\n\n// \u6b64\u65f6\u7684updateReducer\u53ea\u6709\u4e00\u4e2areducer\u53c2\u6570\u6709\u7528\uff0c\u4e0d\u7528\u518d\u7406\u4f1a\u4f20\u5165\u7684\u5176\u4ed6\u53c2\u6570\uff0c\u56e0\u4e3a\u53c2\u6570\uff0c\u72b6\u6001\u5df2\u7ecf\u5728\u7b2c2\u6b65\u6302\u8f7d\u5230\u4e86queue.pending\u4e0a\nfunction updateReducer(reducer, initialAra, init) {\n  // \u590d\u5236\u4e00\u4e2a\u5f53\u524d\u7684 hook \u5bf9\u8c61\u6700\u4e3a\u5de5\u4f5c\u533a\n  // \u8fd9\u91cc\u4ecefunction component\u6267\u884c\u5f00\u59cb\uff0c\u4ece\u7b2c\u4e00\u4e2auseState\u5f00\u59cb\u6309\u987a\u5e8f\u8fd4\u56dememoizedState\u4e0a\u7684hook\u5bf9\u8c61\uff0c\u6240\u4ee5\u8981\u6c42useState\u5fc5\u987b\u6309\u987a\u5e8f\u6267\u884c\uff0c\u4e0d\u80fd\u6709\u6761\u4ef6\u8bed\u53e5\n  const hook = updateWorkInProgressHook();\n  \n  // currentHook\u4e3a\u5f53\u524d\u7684hook\u5bf9\u8c61\n  const current: Hook = (currentHook: any);\n  let baseQueue = current.baseQueue;\n  \n    // \u5728\u7b2c2\u6b65\uff0creact\u5c06\u8ba1\u7b97\u7ed3\u679c'qiqi'\u6302\u8f7d\u5230\u4e86queue.pending\u4e0a\uff0c\u4e5f\u5c31\u662f\u8fd9\u91cc\u6709update\u9700\u8981\u66f4\u65b0\n  // \u8fd9\u91cc\u7684\u903b\u8f91\u662f\u5224\u65adqueue.pending\u662f\u5426\u6709\u66f4\u65b0\uff0c\u5982\u679c\u6709\u6302\u8f7d\u5230baseQueue\u4e0a\uff0c\u5982\u679cbaseQueue\u4e5f\u6709\u66f4\u65b0\uff0c\u5219\u5c06queue.pending\u4e0a\u7684\u66f4\u65b0\u5408\u5e76\u5230baseQueue\u4e0a\n  let pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    if (baseQueue !== null) {\n      let baseFirst = baseQueue.next;\n      let pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  \n  // \u5982\u679c\u7ecf\u8fc7\u8ba1\u7b97\u5408\u5e76\uff0cbaseQueue\u4e0a\u6709\u4e1c\u897f\u9700\u8981\u66f4\u65b0\u65f6\n  if (baseQueue !== null) {\n    let first = baseQueue.next;\n    let update = first;\n    do {\n      if (update.eagerReducer === reducer) {\n            // \u5982\u679c\u65b0\u8001reducer\u76f8\u540c\uff0c\u5219\u76f4\u63a5\u8fd4\u56deeagerState\uff0c\u5373\u2018qiqi\u2019\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          // \u8c03\u7528 action \u8ba1\u7b97 newState\n          newState = reducer(newState, action);\n        }\n    } while(update !== null && update !== first)\n  }\n  \n  // hook\u7684\u503c\u66f4\u65b0\n  hook.memoizedState = newState;\n  hook.baseState = newBaseState;\n  hook.baseQueue = newBaseQueueLast;\n\n  queue.lastRenderedState = newState;\n  \n  // \u8fd4\u56de\u7ecf\u8fc7\u8ba1\u7b97\u7684memoizedState\n  // dispatch\u8fd8\u662f\u90a3\u4e2adispatchAction\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u6700\u7ec8\u8ba1\u7b97\u51fa\u6765\u65b0\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"state"),"\u8fd4\u56de\u7ed9",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"\u53d8\u91cf\uff0c\u4ece\u800c\u5728\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"return"),"\u65f6\uff0c\u80fd\u53d6\u5230\u6700\u65b0\u7684\u503c",(0,i.kt)("inlineCode",{parentName:"p"},"qiqi"),"\u3002")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u70b9\u51fb\u5176\u4ed6\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"age"),"\u6216\u8005",(0,i.kt)("inlineCode",{parentName:"p"},"job"),"\uff0c\u66f4\u65b0\u6d41\u7a0b\u4e0e\u6b64\u76f8\u540c\u3002"))))}c.isMDXComponent=!0}}]);